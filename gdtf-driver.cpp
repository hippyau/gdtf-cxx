// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "gdtf-pimpl.h"

#include <iostream>

int
main (int argc, char* argv[])
{
  if (argc != 2)
  {
    std::cerr << "usage: " << argv[0] << " file.xml" << std::endl;
    return 1;
  }

  try
  {
    // Instantiate individual parsers.
    //
    ::device::GDTF_pimpl GDTF_p;
    ::device::FixtureType_pimpl FixtureType_p;
    ::device::AttributeDefinitions_pimpl AttributeDefinitions_p;
    ::device::ActivationGroups_pimpl ActivationGroups_p;
    ::device::ActivationGroup_pimpl ActivationGroup_p;
    ::xml_schema::string_pimpl string_p;
    ::device::FeatureGroups_pimpl FeatureGroups_p;
    ::device::FeatureGroup_pimpl FeatureGroup_p;
    ::device::Feature_pimpl Feature_p;
    ::device::Attributes_pimpl Attributes_p;
    ::device::Attribute_pimpl Attribute_p;
    ::device::AttributeEnum_pimpl AttributeEnum_p;
    ::device::PhysicalUnitEnum_pimpl PhysicalUnitEnum_p;
    ::device::colorcietype_pimpl colorcietype_p;
    ::device::Wheels_pimpl Wheels_p;
    ::device::Wheel_pimpl Wheel_p;
    ::device::Slot_pimpl Slot_p;
    ::device::Facet_pimpl Facet_p;
    ::device::nametype_pimpl nametype_p;
    ::device::PhysicalDescriptions_pimpl PhysicalDescriptions_p;
    ::device::Emitters_pimpl Emitters_p;
    ::device::Emitter_pimpl Emitter_p;
    ::device::Measurement_pimpl Measurement_p;
    ::device::MeasurementPoint_pimpl MeasurementPoint_p;
    ::xml_schema::float_pimpl float_p;
    ::device::InterpolationToEnum_pimpl InterpolationToEnum_p;
    ::device::Filters_pimpl Filters_p;
    ::device::Filter_pimpl Filter_p;
    ::device::ColorSpace_pimpl ColorSpace_p;
    ::device::ColorSpaceEnum_pimpl ColorSpaceEnum_p;
    ::device::DMXProfiles_pimpl DMXProfiles_p;
    ::device::DMXProfile_pimpl DMXProfile_p;
    ::device::CRIs_pimpl CRIs_p;
    ::device::CRI_pimpl CRI_p;
    ::device::CESEnum_pimpl CESEnum_p;
    ::xml_schema::integer_pimpl integer_p;
    ::device::Models_pimpl Models_p;
    ::device::Model_pimpl Model_p;
    ::device::PrimitiveTypeEnum_pimpl PrimitiveTypeEnum_p;
    ::device::Geometries_pimpl Geometries_p;
    ::device::Geometry_pimpl Geometry_p;
    ::device::Axis_pimpl Axis_p;
    ::device::FilterBeam_pimpl FilterBeam_p;
    ::device::FilterColor_pimpl FilterColor_p;
    ::device::FilterGobo_pimpl FilterGobo_p;
    ::device::FilterShaper_pimpl FilterShaper_p;
    ::device::Beam_pimpl Beam_p;
    ::device::GeometryReference_pimpl GeometryReference_p;
    ::device::Break_pimpl Break_p;
    ::device::matrixtype_pimpl matrixtype_p;
    ::device::LampTypeEnum_pimpl LampTypeEnum_p;
    ::device::BeamTypeEnum_pimpl BeamTypeEnum_p;
    ::device::DMXModes_pimpl DMXModes_p;
    ::device::DMXMode_pimpl DMXMode_p;
    ::device::DMXChannels_pimpl DMXChannels_p;
    ::device::DMXChannel_pimpl DMXChannel_p;
    ::device::LogicalChannel_pimpl LogicalChannel_p;
    ::device::ChannelFunction_pimpl ChannelFunction_p;
    ::device::ChannelSet_pimpl ChannelSet_p;
    ::device::dmxtype_pimpl dmxtype_p;
    ::device::SnapEnum_pimpl SnapEnum_p;
    ::device::MasterEnum_pimpl MasterEnum_p;
    ::device::offsettype_pimpl offsettype_p;
    ::device::Relations_pimpl Relations_p;
    ::device::Relation_pimpl Relation_p;
    ::device::RelationTypesEnum_pimpl RelationTypesEnum_p;
    ::device::FTMacros_pimpl FTMacros_p;
    ::device::FTMacro_pimpl FTMacro_p;
    ::device::MacroDMX_pimpl MacroDMX_p;
    ::device::DMXStep_pimpl DMXStep_p;
    ::device::DMXValue_pimpl DMXValue_p;
    ::device::MacroVisual_pimpl MacroVisual_p;
    ::device::VisualStep_pimpl VisualStep_p;
    ::device::VisualValue_pimpl VisualValue_p;
    ::device::Revisions_pimpl Revisions_p;
    ::device::Revision_pimpl Revision_p;
    ::xml_schema::date_time_pimpl date_time_p;
    ::device::FTPresets_pimpl FTPresets_p;
    ::device::FTPreset_pimpl FTPreset_p;
    ::device::Protocols_pimpl Protocols_p;
    ::device::RDM_pimpl RDM_p;
    ::device::SoftwareVersionID_pimpl SoftwareVersionID_p;
    ::device::DMXPersonality_pimpl DMXPersonality_p;
    ::device::Art_Net_pimpl Art_Net_p;
    ::device::sACN_pimpl sACN_p;
    ::device::KiNET_pimpl KiNET_p;
    ::device::PosiStageNet_pimpl PosiStageNet_p;
    ::device::OpenSoundControl_pimpl OpenSoundControl_p;
    ::device::CITP_pimpl CITP_p;
    ::device::guidtype_pimpl guidtype_p;
    ::device::dataversion_pimpl dataversion_p;

    // Connect the parsers together.
    //
    GDTF_p.parsers (FixtureType_p,
                    dataversion_p);

    FixtureType_p.parsers (AttributeDefinitions_p,
                           Wheels_p,
                           PhysicalDescriptions_p,
                           Models_p,
                           Geometries_p,
                           DMXModes_p,
                           Revisions_p,
                           FTPresets_p,
                           Protocols_p,
                           nametype_p,
                           string_p,
                           string_p,
                           string_p,
                           string_p,
                           guidtype_p,
                           string_p,
                           guidtype_p);

    AttributeDefinitions_p.parsers (ActivationGroups_p,
                                    FeatureGroups_p,
                                    Attributes_p);

    ActivationGroups_p.parsers (ActivationGroup_p);

    ActivationGroup_p.parsers (string_p);

    FeatureGroups_p.parsers (FeatureGroup_p);

    FeatureGroup_p.parsers (Feature_p,
                            string_p,
                            string_p);

    Feature_p.parsers (string_p);

    Attributes_p.parsers (Attribute_p);

    Attribute_p.parsers (AttributeEnum_p,
                         string_p,
                         string_p,
                         PhysicalUnitEnum_p,
                         colorcietype_p,
                         string_p,
                         string_p);

    Wheels_p.parsers (Wheel_p);

    Wheel_p.parsers (Slot_p,
                     nametype_p);

    Slot_p.parsers (Facet_p,
                    nametype_p,
                    colorcietype_p,
                    string_p,
                    string_p);

    Facet_p.parsers (colorcietype_p,
                     string_p);

    PhysicalDescriptions_p.parsers (Emitters_p,
                                    Filters_p,
                                    ColorSpace_p,
                                    DMXProfiles_p,
                                    CRIs_p);

    Emitters_p.parsers (Emitter_p);

    Emitter_p.parsers (Measurement_p,
                       nametype_p,
                       colorcietype_p,
                       float_p,
                       string_p);

    Measurement_p.parsers (MeasurementPoint_p,
                           float_p,
                           float_p,
                           float_p,
                           InterpolationToEnum_p);

    MeasurementPoint_p.parsers (float_p,
                                float_p);

    Filters_p.parsers (Filter_p);

    Filter_p.parsers (Measurement_p,
                      nametype_p,
                      colorcietype_p);

    ColorSpace_p.parsers (ColorSpaceEnum_p,
                          colorcietype_p,
                          colorcietype_p,
                          colorcietype_p,
                          colorcietype_p);

    DMXProfiles_p.parsers (DMXProfile_p);

    CRIs_p.parsers (CRI_p);

    CRI_p.parsers (CESEnum_p,
                   integer_p);

    Models_p.parsers (Model_p);

    Model_p.parsers (nametype_p,
                     float_p,
                     float_p,
                     float_p,
                     PrimitiveTypeEnum_p,
                     string_p);

    Geometries_p.parsers (Geometry_p,
                          Axis_p,
                          FilterBeam_p,
                          FilterColor_p,
                          FilterGobo_p,
                          FilterShaper_p,
                          Beam_p,
                          GeometryReference_p);

    Geometry_p.parsers (Geometry_p,
                        Axis_p,
                        FilterBeam_p,
                        FilterColor_p,
                        FilterGobo_p,
                        FilterShaper_p,
                        Beam_p,
                        GeometryReference_p,
                        nametype_p,
                        nametype_p,
                        matrixtype_p);

    Axis_p.parsers (Geometry_p,
                    Axis_p,
                    FilterBeam_p,
                    FilterColor_p,
                    FilterGobo_p,
                    FilterShaper_p,
                    Beam_p,
                    GeometryReference_p,
                    nametype_p,
                    nametype_p,
                    matrixtype_p);

    FilterBeam_p.parsers (Geometry_p,
                          Axis_p,
                          FilterBeam_p,
                          FilterColor_p,
                          FilterGobo_p,
                          FilterShaper_p,
                          Beam_p,
                          GeometryReference_p,
                          nametype_p,
                          nametype_p,
                          matrixtype_p);

    FilterColor_p.parsers (Geometry_p,
                           Axis_p,
                           FilterBeam_p,
                           FilterColor_p,
                           FilterGobo_p,
                           FilterShaper_p,
                           Beam_p,
                           GeometryReference_p,
                           nametype_p,
                           nametype_p,
                           matrixtype_p);

    FilterGobo_p.parsers (Geometry_p,
                          Axis_p,
                          FilterBeam_p,
                          FilterColor_p,
                          FilterGobo_p,
                          FilterShaper_p,
                          Beam_p,
                          GeometryReference_p,
                          nametype_p,
                          nametype_p,
                          matrixtype_p);

    FilterShaper_p.parsers (Geometry_p,
                            Axis_p,
                            FilterBeam_p,
                            FilterColor_p,
                            FilterGobo_p,
                            FilterShaper_p,
                            Beam_p,
                            GeometryReference_p,
                            nametype_p,
                            nametype_p,
                            matrixtype_p);

    Beam_p.parsers (Geometry_p,
                    Axis_p,
                    FilterBeam_p,
                    FilterColor_p,
                    FilterGobo_p,
                    FilterShaper_p,
                    Beam_p,
                    GeometryReference_p,
                    nametype_p,
                    nametype_p,
                    matrixtype_p,
                    LampTypeEnum_p,
                    float_p,
                    float_p,
                    float_p,
                    float_p,
                    float_p,
                    float_p,
                    BeamTypeEnum_p,
                    integer_p);

    GeometryReference_p.parsers (Break_p,
                                 nametype_p,
                                 matrixtype_p,
                                 nametype_p,
                                 nametype_p);

    Break_p.parsers (integer_p,
                     integer_p);

    DMXModes_p.parsers (DMXMode_p);

    DMXMode_p.parsers (DMXChannels_p,
                       Relations_p,
                       FTMacros_p,
                       nametype_p,
                       nametype_p);

    DMXChannels_p.parsers (DMXChannel_p);

    DMXChannel_p.parsers (LogicalChannel_p,
                          nametype_p,
                          integer_p,
                          offsettype_p,
                          dmxtype_p,
                          dmxtype_p,
                          string_p);

    LogicalChannel_p.parsers (ChannelFunction_p,
                              nametype_p,
                              AttributeEnum_p,
                              SnapEnum_p,
                              MasterEnum_p,
                              float_p,
                              float_p);

    ChannelFunction_p.parsers (ChannelSet_p,
                               string_p,
                               AttributeEnum_p,
                               string_p,
                               dmxtype_p,
                               float_p,
                               float_p,
                               float_p,
                               string_p,
                               string_p,
                               string_p,
                               string_p,
                               dmxtype_p,
                               dmxtype_p);

    ChannelSet_p.parsers (string_p,
                          dmxtype_p,
                          dmxtype_p,
                          float_p,
                          float_p,
                          integer_p);

    Relations_p.parsers (Relation_p);

    Relation_p.parsers (string_p,
                        string_p,
                        string_p,
                        RelationTypesEnum_p);

    FTMacros_p.parsers (FTMacro_p);

    FTMacro_p.parsers (MacroDMX_p,
                       MacroVisual_p,
                       string_p);

    MacroDMX_p.parsers (DMXStep_p);

    DMXStep_p.parsers (DMXValue_p,
                       integer_p);

    DMXValue_p.parsers (dmxtype_p,
                        string_p);

    MacroVisual_p.parsers (VisualStep_p);

    VisualStep_p.parsers (VisualValue_p,
                          integer_p,
                          string_p,
                          string_p);

    VisualValue_p.parsers (string_p,
                           string_p);

    Revisions_p.parsers (Revision_p);

    Revision_p.parsers (string_p,
                        date_time_p,
                        integer_p);

    FTPresets_p.parsers (FTPreset_p);

    Protocols_p.parsers (RDM_p,
                         Art_Net_p,
                         sACN_p,
                         KiNET_p,
                         PosiStageNet_p,
                         OpenSoundControl_p,
                         CITP_p);

    RDM_p.parsers (SoftwareVersionID_p,
                   string_p,
                   string_p);

    SoftwareVersionID_p.parsers (DMXPersonality_p,
                                 string_p);

    DMXPersonality_p.parsers (string_p,
                              nametype_p);

    // Parse the XML document.
    //
    ::xml_schema::document doc_p (
      GDTF_p,
      "http://schemas.gdtf-share.com/device",
      "GDTF");

    GDTF_p.pre ();
    doc_p.parse (argv[1]);
    GDTF_p.post_GDTF ();
  }
  catch (const ::xml_schema::exception& e)
  {
    std::cerr << e << std::endl;
    return 1;
  }
  catch (const std::ios_base::failure&)
  {
    std::cerr << argv[1] << ": error: io failure" << std::endl;
    return 1;
  }
}

